<lcb>
	<!-- Replace the text between [] with the correct values. Please remove [] too
	     Optional sections can be removed safely.-->
	
	<!-- 	Optional. This properties will help to change the behavior of the code printer and generator. 
				if you use only the defaults, this section can be remove-->
	<properties
		<!-- Default string tag used to print the statements, in the template it must be between $statements$ -->
		statements-tag="statements"
		
		<!-- Default string tag used to print the methods, in the template it must be between $methods$ -->		
		methods-tag="methods"
		
		<!-- If true the code generator will create methods, if not all the code will be print as a statements -->		
		use-methods="true"
		
		<!-- When two or more flows arrive to one node the generator will create an auto 
				method if this is set to true, if false, all the code will be print as statements -->		
		use-auto-methods="true"
		
		<!-- Auto methods will use this prefix pluss a number -->
		method-prefix="stup"
	/>
	
	<!-- Templates directory must contains two files
			 methods.st: contains the template definitions for methods
			 statements.st: contains the template definitions for statements, like if, for, etc -->
	<templates path="templates/java/" />
	
	<!-- 	This is the definition of applications for graph data readers.
				The app child is set to class to configure the application, the attributes can differe from one application
				to another, and you can specify more than one application, this will be usefull to process multiples graphs
				at the time and print everything in one file.
	-->
	<graph>
		<app class="org.decision.graphs.qsee.QseeApp" <!-- Application QSEE, visit http://www.leedsmet.ac.uk/qsee/index.htm
																											 Please read license agreement before use it, it is free for personal use.
																											 It is easy to use. -->
			statements-tag="statements"									<!-- if you want to use more than one application or graph you must specify the tag 
																											 in the main template for statements and methods-->
			methods-tag="methods"
			file="[FILE: XML FILE WITH THE GRAPH INFO]" <!-- XML file generated by QSEE -->
			name="[NAME OF THE GRAPH]"									<!-- The name of the graph in the xml file from QSEE -->
		/>
	</graph>
	
	<!-- In and out templates -->
	<main-template
		in ="[FILE: MAIN TEMPLATE]" <!-- The result of LCB generation will replace tags in the main template and 
																			printed to the out file -->
		out="[FILE: OUTPUT FILE]"
	/>
	
	<!-- Optional. 	This will monitor file every n milliseconds and if any of the files change it will fire the code builder 
									if you want to use this, set the attribute enabled to true, and specify the files to be monitored.
									This configuration file is only read at the start of the LCB if you change something the program
									must be restarted.
	-->
	<monitors enabled="false" millis-interval="2000">
		<monitor file="[FILE]"/> <!-- file to monitor -->
		<monitor file="[FILE]"/> <!-- file to monitor -->
	</monitors>
</lcb>









